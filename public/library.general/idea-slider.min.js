class IdeaSlider {
    constructor(obj_config) {
        this.dirLeft = false;
        this.obj_config = {
            idSliderContainer: '',
            arrayImages: [
                {
                    sr: 'ruta de la imagen',
                    description: 'Una descripcion'
                }
            ],
            timeForImg: 0, // milisegundos
            timeForTransition: 0 // milisegundos
        }
        this.obj_config = obj_config;
        this.createElements();
        setInterval(() => {
            this.autoMove();
        }, obj_config.timeForImg);
    }
    createElements() {
        let container = this.getContainer(this.obj_config.idSliderContainer);
        let ul = this.getUl(this.obj_config.arrayImages.length);
        let navMoveImage = this.getNavMoveImage();
        let styleText = '';
        for (let i in this.obj_config.arrayImages) {
            let liImg = this.getLiImg(i);
            let liSpan = this.getLiSpan(i);
            ul.appendChild(this.getLi(liImg, liSpan));
            let imgLabel = this.getLabelImg(i);
            let label = this.getLabel(i);
            label.appendChild(imgLabel);
            navMoveImage.appendChild(label);
            let inputRadio = this.getInputRadio(i);
            (i == 0) ? inputRadio.checked = true: '';
            container.appendChild(inputRadio);
            styleText += `
                #${ this.obj_config.idSliderContainer } input[type="radio"]#${ this.obj_config.idSliderContainer }-radio-${ i }:checked ~ ul { margin-left: -${ i }00%; }
                #${ this.obj_config.idSliderContainer } input[type="radio"]#${ this.obj_config.idSliderContainer }-radio-${ i }:checked ~ nav.move-image label[for="${ this.obj_config.idSliderContainer }-radio-${ i }"] { 
                    width: 100px !important;
                    height: 60px !important;
                }
                #${ this.obj_config.idSliderContainer } input[type="radio"]#${ this.obj_config.idSliderContainer }-radio-${ i }:checked ~ nav.move-image label[for="${ this.obj_config.idSliderContainer }-radio-${ i }"] img {
                    filter: brightness(1) !important;
                }

                #${ this.obj_config.idSliderContainer } nav.move-slider button:first-child { border-radius: 0 3px 3px 0; }
                #${ this.obj_config.idSliderContainer } nav.move-slider button:last-child { border-radius: 3px 0 0 3px; }
                #${ this.obj_config.idSliderContainer } nav.move-slider button svg { padding: 17px; }
                #${ this.obj_config.idSliderContainer } nav.move-slider button:first-child svg { transform: rotate(180deg); }
                #${ this.obj_config.idSliderContainer } nav.move-slider button:last-child svg { transition: rotate(0); }
            `;
        }
        container.appendChild(this.getGeneralStyles(styleText));
        container.appendChild(ul);
        container.appendChild(navMoveImage);

        let navMoveSlider = this.getNavMoveSlider();
        navMoveSlider.appendChild(this.getButtonMoveSlider(true));
        navMoveSlider.appendChild(this.getButtonMoveSlider(false));
        container.appendChild(navMoveSlider);
    }
    getContainer(id) {
        let container = document.getElementById(this.obj_config.idSliderContainer);
        container.style = `
            position: relative;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 1000;
        `;
        return container;
    }
    getInputRadio(index) {
        let inputRadio = document.createElement("input");
        inputRadio.type = "radio";
        inputRadio.setAttribute("index", index);
        inputRadio.name = this.obj_config.idSliderContainer + "-radio";
        inputRadio.id = this.obj_config.idSliderContainer + '-radio-' + index;
        inputRadio.style.display = "none";
        return inputRadio;
    }
    getUl(numImages) {
        let ul = document.createElement("ul");
        ul.style = `
            display: flex;
            min-width: ${ numImages }00%;
            height: 100%;
            transition: all ${ this.obj_config.timeForTransition/1000 }s ease;
        `;
        return ul;
    }
    getLi(liImg, liSpan) {
        let li = document.createElement("li");
        li.style = `
            flex-grow: 1;
            width: 100%;
            height: 100%;
            position: relative;
        `;
        li.appendChild(liImg);
        li.appendChild(liSpan);
        return li;
    }
    getLiImg(index) {
        let img = document.createElement("img");
        img.alt = this.obj_config.idSliderContainer + ' Img ' + index;
        img.style = `
            width: 100%;
            height: 100%;
            object-fit: cover;
            filter: brightness(0.5);
        `;
        if (this.obj_config.arrayImages[index].src) {
            img.src = this.obj_config.arrayImages[index].src;
        }
        return img;
    }
    getLiSpan(index) {
        let span = document.createElement("span");
        span.style = `
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
            margin: auto 0;
            padding: 0 50px;
            width: 100%;
            height: 100px;
            background: transparent;
            color: #FFFFFF;
            font-size: 30px;
            font-weight: normal;
            text-shadow:
            0 1px 2px #000,
            1px 0 2px #000,
            -1px 0 2px #000,
            0 2px 2px #000,
            2px 0 2px #000,
            -2px 0 2px #000,
            0px 4px 5px #000;
        `;
        if (this.obj_config.arrayImages[index].description) {
            span.innerHTML = this.obj_config.arrayImages[index].description;
        }
        return span;
    }
    getNavMoveImage() {
        let nav = document.createElement("nav");
        nav.classList.add("move-image");
        nav.style = `
            position: absolute;
            bottom: 20px;
            display: flex;
            justify-content: center;
            align-items: flex-end;
            width: 100%;
            height: 100px;
            background: transparent;
            max-height: inherit;
            box-shadow: none;
            z-index: 1000;
        `;
        return nav;
    }
    getLabel(index) {
        let label = document.createElement("label");
        label.setAttribute("for", this.obj_config.idSliderContainer + "-radio-" + index);
        label.style = `
            display: block;
            width: 70px;
            height: 40px;
            margin: 0 2px;
            border-radius: 5px;
            box-shadow: 0 3px 10px 0 #000000;
        `;
        return label;
    }
    getLabelImg(index) {
        let img = document.createElement("img");
        img.alt = this.obj_config.idSliderContainer + ' Img ' + index;
        img.style = `
            display: block;
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 5px;
            filter: brightness(0.6);
        `;
        if (this.obj_config.arrayImages[index].src) {
            img.src = this.obj_config.arrayImages[index].src;
        }
        return img;
    }
    getGeneralStyles(styles) {
        let css = document.createElement('style');
        css.type = 'text/css';
        (css.styleSheet) ? css.styleSheet.cssText = styles: css.appendChild(document.createTextNode(styles));
        return css;
    }

    getNavMoveSlider() {
        let nav = document.createElement("nav");
        nav.classList.add("move-slider");
        nav.style = `
            position: absolute;
            top: 0;
            bottom: 0;
            display: flex;
            justify-content: space-between;
            width: 100%;
            height: 100px;
            margin: auto 0;
            background: transparent;
            max-height: inherit;
            box-shadow: none;
            z-index: 1000;
        `;
        return nav;
    }
    getButtonMoveSlider(booleanLeft) { // Flecha izquierda = true, flecha derecha = false
        let button = document.createElement("button");
        button.style = `
            width: 50px;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
        `;
        button.innerHTML = `
            <svg width="100%" height="100%" viewBox="0 0 18 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                <title>Arrow</title>
                <g id="Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round">
                    <g id="24-px-Icons" transform="translate(-171.000000, -26.000000)" stroke="#FFFFFF">
                        <g id="ic_next" transform="translate(168.000000, 24.000000)">
                            <g id="forward">
                                <g transform="translate(4.000000, 3.000000)" stroke-width="2">
                                    <path d="M0,9 L16,9" id="Line"></path>
                                    <path d="M16,9 L7.93774223,0.937742233" id="Line"></path>
                                    <path d="M16,9 L7.93774223,17.0622578" id="Line"></path>
                                </g>
                            </g>
                        </g>
                    </g>
                </g>
            </svg>
        `;
        button.onclick = (event) => {
            let numImages = this.obj_config.arrayImages.length - 1;
            let radios = document.querySelectorAll(`input[name="${ this.obj_config.idSliderContainer + "-radio" }"]`);
            for (let i = 0; i < radios.length; i++) {
                if (radios[i].checked === true) {
                    let indexView = parseInt(radios[i].getAttribute("index"));
                    if (booleanLeft) { // Si la direccion esta hacia la izquierda
                        if (indexView > 0) {
                            radios[i - 1].checked = true;
                            break;
                        }
                    } else {
                        if (indexView < numImages) {
                            radios[i + 1].checked = true;
                            break;
                        }
                    }
                }
            }
        }
        return button;
    }


    autoMove() {
        let numImages = this.obj_config.arrayImages.length - 1;
        let radios = document.querySelectorAll(`input[name="${ this.obj_config.idSliderContainer + "-radio" }"]`);
        for (let i = 0; i < radios.length; i++) {
            if (radios[i].checked === true) {
                let indexView = parseInt(radios[i].getAttribute("index"));
                if (this.dirLeft) { // Si la direccion esta hacia la izquierda
                    if (indexView > 0) {
                        radios[i - 1].checked = true;
                        break;
                    } else {
                        this.dirLeft = false; // Direccionar hacia la derecha
                        radios[i + 1].checked = true;
                        break;
                    }
                } else {
                    if (indexView < numImages) {
                        radios[i + 1].checked = true;
                        break;
                    } else {
                        this.dirLeft = true; // Direccionar hacia la izquierda
                        radios[i - 1].checked = true;
                        break;
                    }
                }
            }
        }
    }
}